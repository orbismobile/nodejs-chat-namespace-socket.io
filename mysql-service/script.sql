CREATE TABLE USER
(
  userId INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  userName VARCHAR(50) NOT NULL
);

CREATE TABLE FRIEND
(
  friendId INT NOT NULL ,
  userId INT NOT NULL,
  CONSTRAINT FRIEND_USER_userId_fk FOREIGN KEY (friendId) REFERENCES USER (userId)
);

INSERT INTO USER (userName) VALUES ('carlos');
INSERT INTO USER (userName) VALUES ('ronaldo');
INSERT INTO USER (userName) VALUES ('carlo');
INSERT INTO USER (userName) VALUES ('ricardo');
INSERT INTO USER (userName) VALUES ('jan');

INSERT INTO FRIEND (friendId, userId) VALUES (1, 2);
INSERT INTO FRIEND (friendId, userId) VALUES (1, 3);
INSERT INTO FRIEND (friendId, userId) VALUES (2, 1);
INSERT INTO FRIEND (friendId, userId) VALUES (2, 3);
INSERT INTO FRIEND (friendId, userId) VALUES (2, 4);
INSERT INTO FRIEND (friendId, userId) VALUES (1, 4);

/**********************************CRUD FOR USER*********************************/

#INSERT NEW USER
DROP PROCEDURE IF EXISTS sp_PostUser;
DELIMITER //
CREATE PROCEDURE sp_PostUser(IN _userName VARCHAR(50))
  BEGIN
    INSERT INTO USER (userName)
    VALUES (_userName);
  END //
DELIMITER ;

#GET USER
DROP PROCEDURE IF EXISTS sp_GetUser;
DELIMITER //
CREATE PROCEDURE sp_GetUser()
  BEGIN
    SELECT *
    FROM USER;
  END //
DELIMITER ;

#GET USER EXCEPT ITSELF
DROP PROCEDURE IF EXISTS sp_GetUserExceptItself;
DELIMITER //
CREATE PROCEDURE sp_GetUserExceptItself(IN _userId INT)
  BEGIN
    SELECT *
    FROM USER WHERE USER.userId != _userId;
  END //
DELIMITER ;

#GET FRIEND BY USERID
DROP PROCEDURE IF EXISTS sp_GetUserByNickname;
DELIMITER //
CREATE PROCEDURE sp_GetUserByNickname(IN _userName VARCHAR(50))
  BEGIN
    SELECT userId, userName
    FROM USER
    WHERE userName = _userName;
  END //
DELIMITER ;

#GET FRIEND BY USERID
DROP PROCEDURE IF EXISTS sp_GetFriendsByUserId;
DELIMITER //
CREATE PROCEDURE sp_GetFriendsByUserId(IN _userId INT)
  BEGIN
    SELECT FRIEND.userId, USER.userName FROM FRIEND
      INNER JOIN USER ON FRIEND.friendId = USER.userId
    WHERE friendId = _userId;
  END //
DELIMITER ;

/**********************************CRUD FOR FRIEND*********************************/

#INSERT NEW FRIEND
DROP PROCEDURE IF EXISTS sp_PostFriend;
DELIMITER //
CREATE PROCEDURE sp_PostFriend(IN _friendId INT, IN _userId INT)
  BEGIN
    INSERT INTO FRIEND (friendId, userId)
    VALUES (_friendId, _userId);
  END //
DELIMITER ;

/*
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE USER;
TRUNCATE TABLE ROOM;
TRUNCATE TABLE ROOM_USER;
SET FOREIGN_KEY_CHECKS = 1;

SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE USER;
DROP TABLE ROOM;
DROP TABLE ROOM_USER;
DROP TABLE USER_FRIEND;
SET FOREIGN_KEY_CHECKS = 1;


#room
SELECT ROOM_USER.id_room, ROOM.room_name
FROM ROOM_USER
  INNER JOIN ROOM ON ROOM_USER.id_room = ROOM.id_room
WHERE ROOM_USER.id_user = 1 AND (ROOM_USER.id_room != 1);


#friends
SELECT USER_FRIEND.id_friend, USER_FRIEND.friend_name
FROM USER_FRIEND
WHERE USER_FRIEND.id_user = 1;*/

